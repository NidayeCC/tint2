diff --git a/deps/v8/tools/js2c.py b/deps/v8/tools/js2c.py
index d915133..dd63454 100755
--- a/deps/v8/tools/js2c.py
+++ b/deps/v8/tools/js2c.py
@@ -592,6 +592,7 @@ def main():
         type: type parameter for NativesCollection template.
         sources.js: JS internal sources or macros.py.""")
   (options, args) = parser.parse_args()
+  args[1] = args[1].replace('../','').replace('..\\','').replace('libraries\\','').replace('node\\','').replace('deps\\','').replace('v8\\','').replace('tools\\','').replace('gyp\\','')
   JS2C(args[2:],
        args[0],
        args[1],
diff --git a/lib/internal/process/stdio.js b/lib/internal/process/stdio.js
index 5568906..46a44c6 100644
--- a/lib/internal/process/stdio.js
+++ b/lib/internal/process/stdio.js
@@ -83,7 +83,14 @@ function setupStdio() {
 
       default:
         // Probably an error on in uv_guess_handle()
-        throw new Error('Implement me. Unknown stdin file type!');
+        if(process.platform === 'win32' && (fd === 1 || fd === 2)) {
+          var fs = require('fs');
+          stream = new fs.SyncWriteStream(fd);
+          stream._type = 'fs'
+        } else {
+          // Probably an error on in uv_guess_handle()
+          throw new Error('Implement me. Unknown stdin file type!');
+        }
     }
 
     // For supporting legacy API we put the FD here.
@@ -92,7 +99,7 @@ function setupStdio() {
     // stdin starts out life in a paused state, but node doesn't
     // know yet.  Explicitly to readStop() it to put it in the
     // not-reading state.
-    if (stdin._handle && stdin._handle.readStop) {
+    if (stdin._handle && stdin._handle.readStop && process.platform != 'win32') {
       stdin._handle.reading = false;
       stdin._readableState.reading = false;
       stdin._handle.readStop();
@@ -149,7 +156,14 @@ function createWritableStdioStream(fd) {
 
     default:
       // Probably an error on in uv_guess_handle()
-      throw new Error('Implement me. Unknown stream file type!');
+      if(process.platform === 'win32' && (fd === 1 || fd === 2)) {
+        var fs = require('fs');
+        stream = new fs.SyncWriteStream(fd);
+        stream._type = 'fs'
+      } else {
+        // Probably an error on in uv_guess_handle()
+        throw new Error('Implement me. Unknown stdin file type!');
+      }
   }
 
   // For supporting legacy API we put the FD here.
